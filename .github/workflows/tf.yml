name: "GitHub Actions terraform build "

on:
  push:
    branches:
      - CI-Terraform


jobs: 
  Terraform:
    runs-on: ubuntu-latest      
    

    defaults:
      run:
        working-directory: infrastructure
    
    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v3
      
      
      - name: Setup Terrafrom 
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.0
          terraform_wrapper: false
     
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
      
      - name: List Infrastructure Directory
        run: ls -la 
 
      - name: Terraform Init 
        run: terraform init
        
      - name: Terraform Plan
        run: |  
          terraform plan \
          -var="certificate_arn=${CERTIFICATE_ARN}" \
          -var="private_key=${PRIVATE_KEY}" \
          -var="aws_region=$(AWS_REGION)" 
        env:  
          CERTIFICATE_ARN: ${{ secrets.CERTIFICATE_ARN }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}

      
      - name: Terraform Apply
        if: github.ref == 'refs/heads/CI-Terraform' && github.event_name == 'push'
        run: | 
          terraform apply \
          -var="certificate_arn=${CERTIFICATE_ARN}" \
          -var="private_key=${PRIVATE_KEY}" \
          -var="aws_region=$(AWS_REGION)" \
          -auto-approve
        env:
          CERTIFICATE_ARN: ${{ secrets.CERTIFICATE_ARN }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}
      
      - name: Enter the ips in inventory.ini file
        run: |
          echo "[server]" > ansible/inventory.ini
          terraform output -json instance_public_ips | jq -r '.[]' >> ansible/inventory.ini 
        shell: bash
 
      - name: Set Terraform Outputs
        id: outputs
        run: |      
          echo "TF_DYNAMODB_TABLE=$(terraform output -raw dynamodb_name )" >> "$GITHUB_OUTPUT"
          echo "TF_SQS_URL=$(terraform output -raw sqs_url )" >> "$GITHUB_OUTPUT"     
          echo "TF_S3_NAME=$(terraform output -raw s3_name )" >> "$GITHUB_OUTPUT"     
          echo "TF_ALB_URL=$(terraform output -raw alb_url )" >> "$GITHUB_OUTPUT"
        shell: bash 
     
      - name: Upload Inventory as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: inventory
          path: infrastructure/ansible/inventory.ini
      
      - name: cat
        run: cat ansible/inventory.ini 
        shell: bash
      
    outputs:
      dynamodb_table_name: ${{ steps.outputs.outputs.TF_DYNAMODB_TABLE }}
      sqs_queue_name: ${{ steps.outputs.outputs.TF_SQS_URL }}
      s3_bucket_name: ${{ steps.outputs.outputs.TF_S3_NAME }}
      alb_url: ${{ steps.outputs.outputs.TF_ALB_URL }}
  
    
  Ansible:
    runs-on: ubuntu-latest
    needs : Terraform
    defaults:
      run:
        working-directory: infrastructure/ansible

    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v3
      
      - name: Download Inventory Artifact
        uses: actions/download-artifact@v3
        with:
          name: inventory

      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible
      
      - name: Output of the inventory 
        run: cat inventory.ini
        shell: bash 

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i inventory.ini playbook.yml \
          --extra-vars "dynamodb_table_name=${{ needs.Terraform.outputs.dynamodb_table_name }} \
          sqs_queue_name=${{ needs.Terraform.outputs.sqs_queue_name }} \
          s3_bucket_name=${{ needs.Terraform.outputs.s3_bucket_name }} \
          alb_url=${{ needs.Terraform.outputs.alb_url }}"


      






      


      

